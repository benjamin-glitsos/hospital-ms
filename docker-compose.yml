version: '3.1'
services:
  database:
    build:
      context: ./${DATABASE_SERVICE}/
    image: ${DATABASE_SERVICE}
    container_name: ${DATABASE_SERVICE}
    volumes:
      - ./${DATABASE_SERVICE}/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./${DATABASE_SERVICE}/init:/docker-entrypoint-initdb.d/init
    restart: always
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
  db-management:
    build:
      context: ./${DATABASE_MANAGEMENT_SERVICE}/
    image: ${DATABASE_MANAGEMENT_SERVICE}
    container_name: ${DATABASE_MANAGEMENT_SERVICE}
    restart: always
    ports:
      - ${DB_MANAGEMENT_PORT}:${DB_MANAGEMENT_PORT}
  controller:
    build:
      context: ./${CONTROLLER_SERVICE}/
    image: ${CONTROLLER_SERVICE}
    container_name: ${CONTROLLER_SERVICE}
    volumes:
      - ./${CONTROLLER_SERVICE}/${VOLUMES_NAME}/root:/root
      - ./${CONTROLLER_SERVICE}:/usr/src/app
    env_file: .env
    stdin_open: true
    tty: true
    ports:
      - ${CONTROLLER_PORT}:80
  # portal:
  #   build:
  #     context: ./${PORTAL_SERVICE}/
  #   image: ${PORTAL_SERVICE}
  #   container_name: ${PORTAL_SERVICE}
  #   env_file: .env
  #   restart: always
  #   stdin_open: true
  #   ports:
  #     - ${PORTAL_PORT}:${PORTAL_PORT}
  #   command: >
  #     /bin/sh -c
  #     "envsubst '
  #     $$ADMIN_PORT
  #     '< /etc/nginx/nginx.conf.template
  #     > /etc/nginx/nginx.conf
  #     && nginx -g 'daemon off;'"
